{"version":3,"file":"index.js","names":["path: string","extensions: Record<MimeType, FileExtension[]>","types: Record<FileExtension, MimeType>","extensions","types"],"sources":["../src/misc.ts","../src/index.ts"],"sourcesContent":["/**\n * Random types not worthy of their own file\n */\nexport const misc = {\n  \"chemical/x-cdx\": {\n    source: \"apache\",\n    extensions: [\"cdx\"],\n  },\n  \"chemical/x-cif\": {\n    source: \"apache\",\n    extensions: [\"cif\"],\n  },\n  \"chemical/x-cmdf\": {\n    source: \"apache\",\n    extensions: [\"cmdf\"],\n  },\n  \"chemical/x-cml\": {\n    source: \"apache\",\n    extensions: [\"cml\"],\n  },\n  \"chemical/x-csml\": {\n    source: \"apache\",\n    extensions: [\"csml\"],\n  },\n  \"chemical/x-xyz\": {\n    source: \"apache\",\n    extensions: [\"xyz\"],\n  },\n  \"font/collection\": {\n    source: \"iana\",\n    extensions: [\"ttc\"],\n  },\n  \"font/otf\": {\n    source: \"iana\",\n    extensions: [\"otf\"],\n  },\n  \"font/ttf\": {\n    source: \"iana\",\n    extensions: [\"ttf\"],\n  },\n  \"font/woff\": {\n    source: \"iana\",\n    extensions: [\"woff\"],\n  },\n  \"font/woff2\": {\n    source: \"iana\",\n    extensions: [\"woff2\"],\n  },\n  \"message/disposition-notification\": {\n    source: \"iana\",\n    extensions: [\"disposition-notification\"],\n  },\n  \"message/global\": {\n    source: \"iana\",\n    extensions: [\"u8msg\"],\n  },\n  \"message/global-delivery-status\": {\n    source: \"iana\",\n    extensions: [\"u8dsn\"],\n  },\n  \"message/global-disposition-notification\": {\n    source: \"iana\",\n    extensions: [\"u8mdn\"],\n  },\n  \"message/global-headers\": {\n    source: \"iana\",\n    extensions: [\"u8hdr\"],\n  },\n  \"message/rfc822\": {\n    source: \"iana\",\n    extensions: [\"eml\", \"mime\"],\n  },\n  \"message/vnd.wfa.wsc\": {\n    source: \"iana\",\n    extensions: [\"wsc\"],\n  },\n  \"model/3mf\": {\n    source: \"iana\",\n    extensions: [\"3mf\"],\n  },\n  \"model/gltf+json\": {\n    source: \"iana\",\n    extensions: [\"gltf\"],\n  },\n  \"model/gltf-binary\": {\n    source: \"iana\",\n    extensions: [\"glb\"],\n  },\n  \"model/iges\": {\n    source: \"iana\",\n    extensions: [\"igs\", \"iges\"],\n  },\n  \"model/mesh\": {\n    source: \"iana\",\n    extensions: [\"msh\", \"mesh\", \"silo\"],\n  },\n  \"model/mtl\": {\n    source: \"iana\",\n    extensions: [\"mtl\"],\n  },\n  \"model/obj\": {\n    source: \"iana\",\n    extensions: [\"obj\"],\n  },\n  \"model/step\": {\n    source: \"iana\",\n    extensions: [\".p21\", \".stp\", \".step\", \".stpnc\", \".210\"],\n  },\n  \"model/step+xml\": {\n    source: \"iana\",\n    extensions: [\"stpx\"],\n  },\n  \"model/step+zip\": {\n    source: \"iana\",\n    extensions: [\"stpz\"],\n  },\n  \"model/step-xml+zip\": {\n    source: \"iana\",\n    extensions: [\"stpxz\"],\n  },\n  \"model/stl\": {\n    source: \"iana\",\n    extensions: [\"stl\"],\n  },\n  \"model/vnd.collada+xml\": {\n    source: \"iana\",\n    extensions: [\"dae\"],\n  },\n  \"model/vnd.dwf\": {\n    source: \"iana\",\n    extensions: [\"dwf\"],\n  },\n  \"model/vnd.gdl\": {\n    source: \"iana\",\n    extensions: [\"gdl\"],\n  },\n  \"model/vnd.gtw\": {\n    source: \"iana\",\n    extensions: [\"gtw\"],\n  },\n  \"model/vnd.mts\": {\n    source: \"iana\",\n    extensions: [\"mts\"],\n  },\n  \"model/vnd.opengex\": {\n    source: \"iana\",\n    extensions: [\"ogex\"],\n  },\n  \"model/vnd.parasolid.transmit.binary\": {\n    source: \"iana\",\n    extensions: [\"x_b\"],\n  },\n  \"model/vnd.parasolid.transmit.text\": {\n    source: \"iana\",\n    extensions: [\"x_t\"],\n  },\n  \"model/vnd.sap.vds\": {\n    source: \"iana\",\n    extensions: [\"vds\"],\n  },\n  \"model/vnd.usdz+zip\": {\n    source: \"iana\",\n    extensions: [\"usdz\"],\n  },\n  \"model/vnd.valve.source.compiled-map\": {\n    source: \"iana\",\n    extensions: [\"bsp\"],\n  },\n  \"model/vnd.vtu\": {\n    source: \"iana\",\n    extensions: [\"vtu\"],\n  },\n  \"model/vrml\": {\n    source: \"iana\",\n    extensions: [\"wrl\", \"vrml\"],\n  },\n  \"model/x3d+binary\": {\n    source: \"apache\",\n    extensions: [\"x3db\", \"x3dbz\"],\n  },\n  \"model/x3d+fastinfoset\": {\n    source: \"iana\",\n    extensions: [\"x3db\"],\n  },\n  \"model/x3d+vrml\": {\n    source: \"apache\",\n    extensions: [\"x3dv\", \"x3dvz\"],\n  },\n  \"model/x3d+xml\": {\n    source: \"iana\",\n    extensions: [\"x3d\", \"x3dz\"],\n  },\n  \"model/x3d-vrml\": {\n    source: \"iana\",\n    extensions: [\"x3dv\"],\n  },\n  \"x-conference/x-cooltalk\": {\n    source: \"apache\",\n    extensions: [\"ice\"],\n  },\n} as const;\n","/**\n * Vendored version of mime-types that can run on the edge due to not using path.extname\n *\n * Also ported it to TypeScript cause it was easier than playing around with custom d.ts file\n *\n * Removed all the stuff we didn't use\n */\n\n/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\nimport { application } from \"./application\";\nimport { audio } from \"./audio\";\nimport { image } from \"./image\";\nimport { misc } from \"./misc\";\nimport { text } from \"./text\";\nimport { video } from \"./video\";\n\nconst mimes = {\n  ...application,\n  ...audio,\n  ...image,\n  ...text,\n  ...video,\n  ...misc,\n};\n\nexport type MimeType = keyof typeof mimes;\nexport type FileExtension = (typeof mimes)[MimeType][\"extensions\"][number];\n\nexport const mimeTypes = mimes as unknown as Record<\n  MimeType,\n  { source: string; extensions: FileExtension[] }\n>;\n\nfunction extname(path: string) {\n  const index = path.lastIndexOf(\".\");\n  return index < 0 ? \"\" : path.substring(index);\n}\n\nconst extensions = {} as Record<MimeType, FileExtension[]>;\nconst types = {} as Record<FileExtension, MimeType>;\n\n// Introduce getters to improve tree-shakeability\nexport function getTypes(): Record<FileExtension, MimeType> {\n  populateMaps(extensions, types);\n  return types;\n}\n\nexport function getExtensions(): Record<MimeType, FileExtension[]> {\n  populateMaps(extensions, types);\n  return extensions;\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n */\nexport function lookup(path: string): false | MimeType {\n  if (!path || typeof path !== \"string\") {\n    return false;\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  const extension = extname(\"x.\" + path)\n    .toLowerCase()\n    .substring(1);\n\n  if (!extension) {\n    return false;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  return getTypes()[extension as keyof typeof types] || false;\n}\n\nlet inittedMaps = false;\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps(\n  extensions: Record<MimeType, FileExtension[]>,\n  types: Record<FileExtension, MimeType>,\n) {\n  if (inittedMaps) return;\n  inittedMaps = true;\n  // source preference (least -> most)\n  const preference = [\"nginx\", \"apache\", undefined, \"iana\"];\n\n  (Object.keys(mimeTypes) as MimeType[]).forEach((type) => {\n    const mime = mimeTypes[type];\n    const exts = mime.extensions;\n\n    if (!exts.length) {\n      return;\n    }\n\n    // mime -> extensions\n    extensions[type] = exts;\n\n    // extension -> mime\n\n    for (const extension of exts) {\n      if (extension in types) {\n        const from = preference.indexOf(mimeTypes[types[extension]].source);\n        const to = preference.indexOf(mime.source);\n\n        if (\n          types[extension] !== \"application/octet-stream\" &&\n          (from > to ||\n            (from === to && types[extension].startsWith(\"application/\")))\n        ) {\n          // skip the remapping\n          continue;\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type;\n    }\n  });\n}\n"],"mappings":";;;;;;;;;;AAGA,MAAa,OAAO;CAClB,kBAAkB;EAChB,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,kBAAkB;EAChB,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,mBAAmB;EACjB,QAAQ;EACR,YAAY,CAAC,MAAO;CACrB;CACD,kBAAkB;EAChB,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,mBAAmB;EACjB,QAAQ;EACR,YAAY,CAAC,MAAO;CACrB;CACD,kBAAkB;EAChB,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,mBAAmB;EACjB,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,YAAY;EACV,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,YAAY;EACV,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,aAAa;EACX,QAAQ;EACR,YAAY,CAAC,MAAO;CACrB;CACD,cAAc;EACZ,QAAQ;EACR,YAAY,CAAC,OAAQ;CACtB;CACD,oCAAoC;EAClC,QAAQ;EACR,YAAY,CAAC,0BAA2B;CACzC;CACD,kBAAkB;EAChB,QAAQ;EACR,YAAY,CAAC,OAAQ;CACtB;CACD,kCAAkC;EAChC,QAAQ;EACR,YAAY,CAAC,OAAQ;CACtB;CACD,2CAA2C;EACzC,QAAQ;EACR,YAAY,CAAC,OAAQ;CACtB;CACD,0BAA0B;EACxB,QAAQ;EACR,YAAY,CAAC,OAAQ;CACtB;CACD,kBAAkB;EAChB,QAAQ;EACR,YAAY,CAAC,OAAO,MAAO;CAC5B;CACD,uBAAuB;EACrB,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,aAAa;EACX,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,mBAAmB;EACjB,QAAQ;EACR,YAAY,CAAC,MAAO;CACrB;CACD,qBAAqB;EACnB,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,cAAc;EACZ,QAAQ;EACR,YAAY,CAAC,OAAO,MAAO;CAC5B;CACD,cAAc;EACZ,QAAQ;EACR,YAAY;GAAC;GAAO;GAAQ;EAAO;CACpC;CACD,aAAa;EACX,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,aAAa;EACX,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,cAAc;EACZ,QAAQ;EACR,YAAY;GAAC;GAAQ;GAAQ;GAAS;GAAU;EAAO;CACxD;CACD,kBAAkB;EAChB,QAAQ;EACR,YAAY,CAAC,MAAO;CACrB;CACD,kBAAkB;EAChB,QAAQ;EACR,YAAY,CAAC,MAAO;CACrB;CACD,sBAAsB;EACpB,QAAQ;EACR,YAAY,CAAC,OAAQ;CACtB;CACD,aAAa;EACX,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,yBAAyB;EACvB,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,iBAAiB;EACf,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,iBAAiB;EACf,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,iBAAiB;EACf,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,iBAAiB;EACf,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,qBAAqB;EACnB,QAAQ;EACR,YAAY,CAAC,MAAO;CACrB;CACD,uCAAuC;EACrC,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,qCAAqC;EACnC,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,qBAAqB;EACnB,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,sBAAsB;EACpB,QAAQ;EACR,YAAY,CAAC,MAAO;CACrB;CACD,uCAAuC;EACrC,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,iBAAiB;EACf,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;CACD,cAAc;EACZ,QAAQ;EACR,YAAY,CAAC,OAAO,MAAO;CAC5B;CACD,oBAAoB;EAClB,QAAQ;EACR,YAAY,CAAC,QAAQ,OAAQ;CAC9B;CACD,yBAAyB;EACvB,QAAQ;EACR,YAAY,CAAC,MAAO;CACrB;CACD,kBAAkB;EAChB,QAAQ;EACR,YAAY,CAAC,QAAQ,OAAQ;CAC9B;CACD,iBAAiB;EACf,QAAQ;EACR,YAAY,CAAC,OAAO,MAAO;CAC5B;CACD,kBAAkB;EAChB,QAAQ;EACR,YAAY,CAAC,MAAO;CACrB;CACD,2BAA2B;EACzB,QAAQ;EACR,YAAY,CAAC,KAAM;CACpB;AACF;;;;AClLD,MAAM,QAAQ;CACZ,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;AACJ;AAKD,MAAa,YAAY;AAKzB,SAAS,QAAQA,MAAc;CAC7B,MAAM,QAAQ,KAAK,YAAY,IAAI;AACnC,QAAO,QAAQ,IAAI,KAAK,KAAK,UAAU,MAAM;AAC9C;AAED,MAAM,aAAa,CAAE;AACrB,MAAM,QAAQ,CAAE;AAGhB,SAAgB,WAA4C;CAC1D,aAAa,YAAY,MAAM;AAC/B,QAAO;AACR;AAED,SAAgB,gBAAmD;CACjE,aAAa,YAAY,MAAM;AAC/B,QAAO;AACR;;;;AAKD,SAAgB,OAAOA,MAAgC;AACrD,KAAI,CAAC,QAAQ,OAAO,SAAS,SAC3B,QAAO;CAIT,MAAM,YAAY,QAAQ,OAAO,KAAK,CACnC,aAAa,CACb,UAAU,EAAE;AAEf,KAAI,CAAC,UACH,QAAO;AAIT,QAAO,UAAU,CAAC,cAAoC;AACvD;AAED,IAAI,cAAc;;;;;AAMlB,SAAS,aACPC,cACAC,SACA;AACA,KAAI,YAAa;CACjB,cAAc;CAEd,MAAM,aAAa;EAAC;EAAS;EAAU;EAAW;CAAO;CAExD,OAAO,KAAK,UAAU,CAAgB,QAAQ,CAAC,SAAS;EACvD,MAAM,OAAO,UAAU;EACvB,MAAM,OAAO,KAAK;AAElB,MAAI,CAAC,KAAK,OACR;EAIFC,aAAW,QAAQ;AAInB,OAAK,MAAM,aAAa,MAAM;AAC5B,OAAI,aAAaC,SAAO;IACtB,MAAM,OAAO,WAAW,QAAQ,UAAUA,QAAM,YAAY,OAAO;IACnE,MAAM,KAAK,WAAW,QAAQ,KAAK,OAAO;AAE1C,QACEA,QAAM,eAAe,+BACpB,OAAO,MACL,SAAS,MAAMA,QAAM,WAAW,WAAW,eAAe,EAG7D;GAEH;GAGDA,QAAM,aAAa;EACpB;CACF,EAAC;AACH"}